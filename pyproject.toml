[build-system]
requires = ["setuptools>=69.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
exclude = ["tests"]

[project]
name = "chromacache"
version = "0.0.1"
authors = [
  { name="Mathieu Ciancone", email="mathieu@wikit.ai" },
  { name="Imene Kerboua", email="imenelkerboua@gmail.com"}
]
description = "A helper tool that simplifies caching embeddings for reusability."
keywords = ["chromadb", "vectorestore", "embeddings", "cache"]
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
  "voyageai>=0.1.6",
  "tiktoken>=0.5.2",
  "openai>=1.6.1",
  "chromadb>=0.4.21",
  "python-dotenv>=1.0.1",
  "cohere==4.41",
  "laser_encoders==0.0.1",
  "sentence-transformers==2.2.2",
  "mistralai==0.0.12"
]

[project.urls]
Homepage = "https://github.com/Lyon-NLP/chroma_cache"

[project.optional-dependencies]
dev = ["ruff>=0.0.254", "pytest", "pytest-xdist"]

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = ["F", "I", "E", "D"]
ignore = ["E501",   # line too long 
        "E741",     # ambiguous variable name
        "F403",     # undefined import
        "D100",     # Missing docstring in public module
        "D101",     # Missing docstring in public class
        "D102",     # Missing docstring in public method
        "D103",     # Missing docstring in public function
        "D104",     # Missing docstring in public package
        "D107",     # Missing docstring in __init__
        "D205",     # 1 blank line required between summary line and description
        "D415",     # First line should end with a period
]
ignore-init-module-imports = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true